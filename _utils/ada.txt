model = 'snapshot-256.pkl' #@param {type:"string"} 
reconstruct = True #@param {type:"boolean"} 
reconstruct = '-r ' if reconstruct else ''
%cd $work_dir
%run src/model_convert.py --source $model $reconstruct


python ada_src/model_convert.py --source "snapshot-256.pkl" -r



#@title ### Generator setup
!cd $work_dir

output = '_out/AB_2' #@param {type:"string"}

frames = 200 #@param {type:"integer"}
frame_step = 50 #@param {type:"integer"}
timeframe = '%d-%d' % (frames, frame_step)

cubic_smooth = True #@param {type:"boolean"}
gauss_smooth = False #@param {type:"boolean"}
cubic_smooth = '--cubic ' if cubic_smooth else ''
gauss_smooth = '--gauss ' if gauss_smooth else ''
smooth = cubic_smooth + gauss_smooth

save_lat = False #@param {type:"boolean"}
save_lat = '--save_lat ' if save_lat else ''

seed = 0 #@param {type:"integer"}

#@markdown Select model from the dropdown below:
model_select(work_dir)
# model_select('/content/drive/MyDrive/sg2a_eps')

%cd $work_dir
%run src/_genSGAN2.py --model $model --out_dir $output --frames $timeframe --size $size --scale_type $scaling  $smooth $save_lat --seed $seed

---------------------------------------------------------

#@title ### Multi-latent  generation

sizeX = 1080 #@param {type:"integer"} 
sizeY = 3840 #@param {type:"integer"}
size = '%d-%d' % (sizeX, sizeY)
scaling = 'pad' #@param ['pad', 'padside', 'symm', 'symmside']

split_X =  1#@param {type:"integer"} 
split_Y =  2#@param {type:"integer"}
split = '%d-%d' % (split_X, split_Y)
splitfine = 0. #@param {type:"number"}

%cd $work_dir
%run src/_genSGAN2.py --model $model --out_dir $output --frames $timeframe --size $size --scale_type $scaling -n $split --splitfine $splitfine $smooth --seed $seed
ipython_display(ImageSequenceClip(img_list(output), fps=25), center=False)

#@title ### Masked  generation

sizeX = 1080 #@param {type:"integer"} 
sizeY = 3840 #@param {type:"integer"}
size = '%d-%d' % (sizeX, sizeY)

lat_mask = '_in/Untitled-2.png' #@param {type:"string"} 

%cd $work_dir
%run src/_genSGAN2.py --model $model --out_dir $output --frames $timeframe --size $size --latmask $lat_mask  $smooth --seed $seed
ipython_display(ImageSequenceClip(img_list(output), fps=25), center=False)

----------------------------------------------------------------------

#@title ### Custom size generation

cubic_smooth = '--cubic ' if cubic_smooth else ''
gauss_smooth = '--gauss ' if gauss_smooth else ''
smooth = cubic_smooth + gauss_smooth

save_lat = '--save_lat ' if save_lat else ''

sizeX = 1080 #@param {type:"integer"} 
sizeY = 3840 #@param {type:"integer"}
size = '%d-%d' % (sizeX, sizeY)
scaling = 'symm' #@param ['pad', 'padside', 'symm', 'symmside']

python ada_src/_genSGAN2.py --model "models\network-snapshot-010990-Gs.pkl" --out_dir "_out\out_SGAN2" --frames "200-40" --size "1080-3840" --scale_type 'symm' --cubic --seed 42 --verbose
-n "1-2" --splitfine 0.
--latmask '_in/Untitled-2.png'